{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class AuthenticationService {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.route = 'users';\n  }\n  registerUser(user) {\n    return this.apiService.post(this.route + '/create-user', user);\n  }\n  login(user) {\n    return this.apiService.post(this.route + '/login', user);\n  }\n  addTokenToLocalStorage(token) {\n    localStorage.setItem(\"jwt\", token);\n  }\n  isLoggedIn() {\n    return localStorage.getItem(\"jwt\") == null;\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.ApiService));\n};\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,qBAAqB;EAGhCC,YAA6BC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,UAAK,GAAG,OAAO;EAGhC;EAEAC,YAAY,CAACC,IAAS;IACpB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACC,KAAK,GAAG,cAAc,EAAEF,IAAI,CAAC;EAChE;EAEAG,KAAK,CAACH,IAAS;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACC,KAAK,GAAG,QAAQ,EAAEF,IAAI,CAAC;EAC1D;EAEAI,sBAAsB,CAACC,KAAa;IAClCC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAC;EACpC;EAEAG,UAAU;IACR,OAAOF,YAAY,CAACG,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI;EAC5C;;AApBWb,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAc,SAArBd,qBAAqB;EAAAe,YAFpB;AAAM","names":["AuthenticationService","constructor","apiService","registerUser","user","post","route","login","addTokenToLocalStorage","token","localStorage","setItem","isLoggedIn","getItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\core\\services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ApiService } from \"./api.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private readonly route = 'users';\n\n  constructor(private readonly apiService: ApiService) {\n  }\n\n  registerUser(user: any) {\n    return this.apiService.post(this.route + '/create-user', user);\n  }\n\n  login(user: any) {\n    return this.apiService.post(this.route + '/login', user);\n  }\n\n  addTokenToLocalStorage(token: string) {\n    localStorage.setItem(\"jwt\", token);\n  }\n\n  isLoggedIn(): boolean {\n    return localStorage.getItem(\"jwt\") == null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}