{"ast":null,"code":"import { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../core/services/create-dir.service\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nexport class CreateDirComponent {\n  constructor(formBuilder, router, createDirService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.createDirService = createDirService;\n    this.createDirForm = this.formBuilder.group({\n      DirName: ['', Validators.required]\n    });\n  }\n  create() {\n    let dto = {\n      DirName: this.createDirForm.get('DirName')?.value?.toString() || '',\n      pathToCreateAt: this.router.url\n    };\n    this.createDirService.create(dto).subscribe(data => {\n      localStorage.removeItem(\"createDirMenu\");\n    }, error => {\n      console.error(error);\n    }, () => {});\n  }\n}\nCreateDirComponent.ɵfac = function CreateDirComponent_Factory(t) {\n  return new (t || CreateDirComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CreateDirService));\n};\nCreateDirComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateDirComponent,\n  selectors: [[\"app-create-dir\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"formDir\", 3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"DirName\", \"type\", \"text\", \"placeholder\", \"Directory name\", \"required\", \"\", 1, \"formElems\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function CreateDirComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelement(1, \"input\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CreateDirComponent_Template_button_click_2_listener() {\n        return ctx.create();\n      });\n      i0.ɵɵtext(3, \"Create\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.createDirForm);\n    }\n  },\n  dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, MatInputModule, i4.MatInput, MatButtonModule, i5.MatButton, MatFormFieldModule],\n  styles: [\".formDir[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-content: space-around;\\r\\n  align-items: center;\\r\\n  justify-content: flex-start;\\r\\n  width: 100vw;\\r\\n  padding: 1vw;\\r\\n  margin-bottom: 5vw;\\r\\n  border-style: none;\\r\\n  box-shadow: 0 2px 10px 0 #0000cc;\\r\\n}\\r\\n\\r\\n.formElems[_ngcontent-%COMP%] {\\r\\n  width: 40%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtZGlyL2NyZWF0ZS1kaXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYiwyQkFBMkI7RUFDM0IsbUJBQW1CO0VBQ25CLDJCQUEyQjtFQUMzQixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm1EaXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24tY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBwYWRkaW5nOiAxdnc7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXZ3O1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICBib3gtc2hhZG93OiAwIDJweCAxMHB4IDAgIzAwMDBjYztcclxufVxyXG5cclxuLmZvcm1FbGVtcyB7XHJcbiAgd2lkdGg6IDQwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAC7E,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,kBAAkB,QAAQ,8BAA8B;;;;;;;AAkBjE,OAAM,MAAOC,kBAAkB;EAC7BC,YAA6BC,WAAwB,EAAUC,MAAc,EAAUC,gBAAkC;IAA5F,gBAAW,GAAXF,WAAW;IAAuB,WAAM,GAANC,MAAM;IAAkB,qBAAgB,GAAhBC,gBAAgB;IAEvG,kBAAa,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrCC,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ;KAClC,CAAC;EAJ2H;EAO7HC,MAAM;IACJ,IAAIC,GAAG,GAAwB;MAC7BH,OAAO,EAAE,IAAI,CAACI,aAAa,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEC,KAAK,EAAEC,QAAQ,EAAE,IAAI,EAAE;MACnEC,cAAc,EAAE,IAAI,CAACX,MAAM,CAACY;KAC7B;IAED,IAAI,CAACX,gBAAgB,CAACI,MAAM,CAACC,GAAG,CAAC,CAACO,SAAS,CACxCC,IAAS,IAAI;MACZC,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;IAC1C,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,EACD,MAAK,CAEL,CAAC,CACF;EACH;;AAzBWpB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCtB/BC,+BAAkD;MAChDA,2BAA8G;MAE9GA,iCAA6D;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAACD,sBAAM;MAAAA,iBAAS;;;MAHxDA,6CAA2B;;;iBDe7ClC,mBAAmB,2JACnBE,cAAc,eACdC,eAAe,gBACfC,kBAAkB;EAAAgC;AAAA","names":["ReactiveFormsModule","Validators","MatInputModule","MatButtonModule","MatFormFieldModule","CreateDirComponent","constructor","formBuilder","router","createDirService","group","DirName","required","create","dto","createDirForm","get","value","toString","pathToCreateAt","url","subscribe","data","localStorage","removeItem","error","console","selectors","standalone","features","decls","vars","consts","template","i0","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\components\\create-dir\\create-dir.component.ts","C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\components\\create-dir\\create-dir.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { Router } from '@angular/router';\r\nimport { CreateBaseDirService } from '../../core/services/create-base-dir.service';\r\nimport { CreateDirService } from '../../core/services/create-dir.service';\r\nimport { CreateDirRequestDto } from '../../data/interfaces/create-dir-request-dto';\r\n\r\n@Component({\r\n  selector: 'app-create-dir',\r\n  templateUrl: './create-dir.component.html',\r\n  styleUrls: ['./create-dir.component.css'],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n  ],\r\n  standalone: true\r\n})\r\nexport class CreateDirComponent {\r\n  constructor(private readonly formBuilder: FormBuilder, private router: Router, private createDirService: CreateDirService) { }\r\n\r\n  createDirForm = this.formBuilder.group({\r\n    DirName: ['', Validators.required]\r\n  });\r\n\r\n\r\n  create() {\r\n    let dto: CreateDirRequestDto = {\r\n      DirName: this.createDirForm.get('DirName')?.value?.toString() || '',\r\n      pathToCreateAt: this.router.url\r\n    };\r\n\r\n    this.createDirService.create(dto).subscribe(\r\n      (data: any) => {\r\n        localStorage.removeItem(\"createDirMenu\");\r\n      },\r\n      (error: any) => {\r\n        console.error(error);\r\n      },\r\n      () => {\r\n\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form class=\"formDir\" [formGroup]=\"createDirForm\">\n  <input class=\"formElems\" matInput formControlName=\"DirName\" type=\"text\" placeholder=\"Directory name\" required>\n\n  <button mat-raised-button color=\"primary\" (click)=\"create()\">Create</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}