{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { DateFormattingPipe } from '../../core/pipes/date-formatting.pipe';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../core/services/get-entries.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../core/services/create-base-dir.service\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/material/icon\";\nfunction MainPageComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵtext(1, \"Create Directory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainPageComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function MainPageComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.createBaseDir());\n    });\n    i0.ɵɵtext(1, \"Create Base Directory\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainPageComponent_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵtext(1, \"Upload\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainPageComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵtext(1, \"Give access to this\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainPageComponent_div_12_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"folder\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainPageComponent_div_12_mat_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\");\n    i0.ɵɵtext(1, \"insert_drive_file\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MainPageComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"button\", 8);\n    i0.ɵɵtemplate(2, MainPageComponent_div_12_mat_icon_2_Template, 2, 0, \"mat-icon\", 9);\n    i0.ɵɵtemplate(3, MainPageComponent_div_12_mat_icon_3_Template, 2, 0, \"mat-icon\", 9);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 10);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"dateFormatting\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function MainPageComponent_div_12_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.download());\n    });\n    i0.ɵɵelementStart(10, \"mat-icon\");\n    i0.ɵɵtext(11, \"cloud_download\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", item_r7.isDir);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !item_r7.isDir);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r7.fileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 4, item_r7.dateModified));\n  }\n}\nexport class MainPageComponent {\n  constructor(location, getEntriesService, router, formBuilder, createBaseDirService, sanitizer) {\n    this.location = location;\n    this.getEntriesService = getEntriesService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.createBaseDirService = createBaseDirService;\n    this.sanitizer = sanitizer;\n    this.items = [];\n    this.pathToAsk = \"\";\n    this.currentFolder = \"\";\n    this.createBaseDirContent = \"\";\n    this.createBaseDirForm = this.formBuilder.group({\n      DirectoryName: ['', Validators.required],\n      IsPublic: ['true']\n    });\n    this.trustedHtml = this.sanitizer.bypassSecurityTrustHtml(this.createBaseDirContent);\n  }\n  ngOnInit() {\n    this.pathToAsk = this.location.path();\n    var pathParts = this.pathToAsk.split('/');\n    this.currentFolder = pathParts[pathParts.length - 1];\n    this.getEntriesService.getEntries(this.pathToAsk).subscribe(data => {\n      this.items = data;\n    }, error => {\n      console.error('Error during fetching entries: ' + error.error.message);\n    });\n  }\n  getPathParts() {\n    return this.location.path().split('/');\n  }\n  isUserDir() {\n    return this.getPathParts().length === 2;\n  }\n  isBaseDir() {\n    return this.getPathParts().length === 3;\n  }\n  createBaseDir() {\n    /*\r\n    const params = {\r\n      queryParams: { createBaseDir: 'true' },\r\n    };\r\n    this.router.navigate([this.router.url], params);\r\n    */\n    let elem = document.getElementById(\"createBaseDir\");\n    if (elem == null) return;\n    elem.innerHTML = \"<form class=\\\"formDir\\\" [formGroup]=\\\"createBaseDirForm\\\">< input class=\\\"formElems\\\" matInput formControlName = \\\"DirectoryName\\\" type = \\\"text\\\" placeholder = \\\"Directory name\\\" required >\\\r\n        <div class=\\\"formElems\\\" >\\\r\n          <input type=\\\"radio\\\" id = \\\"public\\\" formControlName = \\\"IsPublic\\\" value = \\\"true\\\" checked >\\\r\n            <label for= \\\"public\\\" > Public < /label>\\\r\n              < input type = \\\"radio\\\" id = \\\"private\\\" formControlName = \\\"IsPublic\\\" value = \\\"false\\\" >\\\r\n                <label for= \\\"private\\\" > Private < /label>\\\r\n                  < /div>\\\r\n                  < button mat - raised - button color = \\\"primary\\\"(click) = \\\"create()\\\" > Create < /button>\\\r\n                  < /form>\\\r\n\";\n  }\n  download() {\n    // TODO\n  }\n  create() {\n    let dto = {\n      DirectoryName: this.createBaseDirForm.get('DirectoryName')?.value?.toString() || '',\n      IsPublic: this.createBaseDirForm.get('IsPublic')?.value === 'true'\n    };\n    this.createBaseDirService.create(dto).subscribe(data => {\n      this.createBaseDirContent = '';\n      this.router.navigate([this.router.url]);\n    }, error => {\n      console.error(error);\n    }, () => {});\n  }\n}\nMainPageComponent.ɵfac = function MainPageComponent_Factory(t) {\n  return new (t || MainPageComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.GetEntriesService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.CreateBaseDirService), i0.ɵɵdirectiveInject(i6.DomSanitizer));\n};\nMainPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainPageComponent,\n  selectors: [[\"app-main-page\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"navbar\"], [\"mat-button\", \"\"], [\"mat-button\", \"\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"createBaseDir\"], [\"class\", \"container\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"container\"], [\"mat-button\", \"\", 1, \"half-width\"], [4, \"ngIf\"], [1, \"text\"], [\"mat-icon-button\", \"\", 3, \"click\"]],\n  template: function MainPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵtext(4, \"Previous folder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, MainPageComponent_button_5_Template, 2, 0, \"button\", 2);\n      i0.ɵɵtemplate(6, MainPageComponent_button_6_Template, 2, 0, \"button\", 3);\n      i0.ɵɵtemplate(7, MainPageComponent_button_7_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementStart(8, \"button\", 1);\n      i0.ɵɵtext(9, \"Delete this\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, MainPageComponent_button_10_Template, 2, 0, \"button\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"div\", 4);\n      i0.ɵɵtemplate(12, MainPageComponent_div_12_Template, 12, 6, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.currentFolder);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUserDir());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isUserDir());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUserDir());\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isBaseDir());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [CommonModule, i1.NgForOf, i1.NgIf, MatIconModule, i7.MatIcon, DateFormattingPipe, RouterModule, ReactiveFormsModule],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 10px;\\r\\n  background-color: #f0f0f0;\\r\\n  border-radius: 5px;\\r\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.navbar[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-content: flex-start;\\r\\n  justify-content: space-evenly;\\r\\n  align-items: center;\\r\\n  margin: 0vw 0vw 5vw 0vw;\\r\\n  padding: 1vw 1vw 1vw 1vw;\\r\\n  border-style: none;\\r\\n  box-shadow: 0 2px 10px 0 #0000cc;\\r\\n}\\r\\n\\r\\n.half-width[_ngcontent-%COMP%] {\\r\\n  width: 50%;\\r\\n  display: flex;\\r\\n  align-items:flex-start ;\\r\\n  align-content:center;\\r\\n}\\r\\n\\r\\n.text[_ngcontent-%COMP%] {\\r\\n  flex-grow: 1;\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\\r\\nbutton[mat-icon-button][_ngcontent-%COMP%] {\\r\\n  background-color: #4caf50;\\r\\n  color: #ffffff;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\nmat-icon[_ngcontent-%COMP%] {\\r\\n  font-size: 18px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9tYWluLXBhZ2UvbWFpbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixrQkFBa0I7RUFDbEIsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHlCQUF5QjtFQUN6Qiw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2Qix3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLFVBQVU7RUFDVixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLFlBQVk7RUFDWixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufVxyXG5cclxuLm5hdmJhciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAwdncgMHZ3IDV2dyAwdnc7XHJcbiAgcGFkZGluZzogMXZ3IDF2dyAxdncgMXZ3O1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICBib3gtc2hhZG93OiAwIDJweCAxMHB4IDAgIzAwMDBjYztcclxufVxyXG5cclxuLmhhbGYtd2lkdGgge1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczpmbGV4LXN0YXJ0IDtcclxuICBhbGlnbi1jb250ZW50OmNlbnRlcjtcclxufVxyXG5cclxuLnRleHQge1xyXG4gIGZsZXgtZ3JvdzogMTtcclxuICBtYXJnaW46IDAgMTBweDtcclxufVxyXG5cclxuYnV0dG9uW21hdC1pY29uLWJ1dHRvbl0ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbm1hdC1pY29uIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["CommonModule","MatIconModule","DateFormattingPipe","RouterModule","ReactiveFormsModule","Validators","i0","MainPageComponent","constructor","location","getEntriesService","router","formBuilder","createBaseDirService","sanitizer","group","DirectoryName","required","IsPublic","trustedHtml","bypassSecurityTrustHtml","createBaseDirContent","ngOnInit","pathToAsk","path","pathParts","split","currentFolder","length","getEntries","subscribe","data","items","error","console","message","getPathParts","isUserDir","isBaseDir","createBaseDir","elem","document","getElementById","innerHTML","download","create","dto","createBaseDirForm","get","value","toString","navigate","url","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\components\\main-page\\main-page.component.ts","C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\components\\main-page\\main-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { Entry } from '../../data/interfaces/entry';\r\nimport { GetEntriesService } from '../../core/services/get-entries.service';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { DateFormattingPipe } from '../../core/pipes/date-formatting.pipe';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CreateBaseDirComponent } from '../create-base-dir/create-base-dir.component';\r\nimport { BaseDirCrUpRequestDto } from '../../data/interfaces/base-dir-cr-up-request-dto';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { CreateBaseDirService } from '../../core/services/create-base-dir.service';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.css'],\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    DateFormattingPipe,\r\n    RouterModule,\r\n    CreateBaseDirComponent,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n  \r\n  items: Entry[] = [];\r\n  pathToAsk: string = \"\";\r\n  currentFolder: string = \"\";\r\n  createBaseDirContent: string = \"\";\r\n\r\n  trustedHtml: SafeHtml;\r\n  constructor(private location: Location, private readonly getEntriesService: GetEntriesService, private router: Router,\r\n    private readonly formBuilder: FormBuilder, private createBaseDirService: CreateBaseDirService, private sanitizer: DomSanitizer) {\r\n    this.trustedHtml = this.sanitizer.bypassSecurityTrustHtml(this.createBaseDirContent);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.pathToAsk = this.location.path();\r\n    var pathParts = this.pathToAsk.split('/');\r\n    this.currentFolder = pathParts[pathParts.length - 1];\r\n    this.getEntriesService.getEntries(this.pathToAsk).subscribe(\r\n      (data: any) => {\r\n        this.items = data;\r\n      },\r\n      (error) => {\r\n        console.error('Error during fetching entries: ' + error.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  getPathParts(): string[] {\r\n    return this.location.path().split('/');\r\n  }\r\n\r\n  isUserDir(): boolean {\r\n    return this.getPathParts().length === 2;\r\n  }\r\n\r\n  isBaseDir(): boolean {\r\n    return this.getPathParts().length === 3;\r\n  }\r\n\r\n  createBaseDir() {\r\n    /*\r\n    const params = {\r\n      queryParams: { createBaseDir: 'true' },\r\n    };\r\n    this.router.navigate([this.router.url], params);\r\n    */\r\n    let elem = document.getElementById(\"createBaseDir\");\r\n    if (elem == null) return;\r\n    elem.innerHTML = \"<form class=\\\"formDir\\\" [formGroup]=\\\"createBaseDirForm\\\">< input class=\\\"formElems\\\" matInput formControlName = \\\"DirectoryName\\\" type = \\\"text\\\" placeholder = \\\"Directory name\\\" required >\\\r\n        <div class=\\\"formElems\\\" >\\\r\n          <input type=\\\"radio\\\" id = \\\"public\\\" formControlName = \\\"IsPublic\\\" value = \\\"true\\\" checked >\\\r\n            <label for= \\\"public\\\" > Public < /label>\\\r\n              < input type = \\\"radio\\\" id = \\\"private\\\" formControlName = \\\"IsPublic\\\" value = \\\"false\\\" >\\\r\n                <label for= \\\"private\\\" > Private < /label>\\\r\n                  < /div>\\\r\n                  < button mat - raised - button color = \\\"primary\\\"(click) = \\\"create()\\\" > Create < /button>\\\r\n                  < /form>\\\r\n\";\r\n  }\r\n\r\n  download() {\r\n    // TODO\r\n  }\r\n\r\n\r\n  createBaseDirForm = this.formBuilder.group({\r\n    DirectoryName: ['', Validators.required],\r\n    IsPublic: ['true']\r\n  });\r\n\r\n  create() {\r\n    let dto: BaseDirCrUpRequestDto = {\r\n      DirectoryName: this.createBaseDirForm.get('DirectoryName')?.value?.toString() || '',\r\n      IsPublic: this.createBaseDirForm.get('IsPublic')?.value === 'true'\r\n    };\r\n\r\n    this.createBaseDirService.create(dto).subscribe(\r\n      (data: any) => {\r\n        this.createBaseDirContent = '';\r\n        this.router.navigate([this.router.url]);\r\n      },\r\n      (error: any) => {\r\n        console.error(error);\r\n      },\r\n      () => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"navbar\">\r\n  <div>{{ currentFolder }}</div>\r\n  <button mat-button>Previous folder</button>\r\n  <button mat-button *ngIf=\"!isUserDir()\">Create Directory</button>\r\n  <button mat-button *ngIf=\"isUserDir()\" (click)=\"createBaseDir()\">Create Base Directory</button>\r\n  <button mat-button *ngIf=\"!isUserDir()\">Upload</button>\r\n  <button mat-button>Delete this</button>\r\n  <button mat-button *ngIf=\"isBaseDir()\">Give access to this</button>\r\n</div>\r\n\r\n<div id=\"createBaseDir\"></div>\r\n\r\n<div *ngFor=\"let item of items\" class=\"container\">\r\n  <button mat-button class=\"half-width\">\r\n    <mat-icon *ngIf=\"item.isDir\">folder</mat-icon>\r\n    <mat-icon *ngIf=\"!item.isDir\">insert_drive_file</mat-icon>\r\n    <p>{{ item.fileName }}</p>\r\n  </button>\r\n  <div class=\"text\">{{ item.dateModified | dateFormatting }}</div>\r\n  <button mat-icon-button (click)=\"download()\">\r\n    <mat-icon>cloud_download</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}