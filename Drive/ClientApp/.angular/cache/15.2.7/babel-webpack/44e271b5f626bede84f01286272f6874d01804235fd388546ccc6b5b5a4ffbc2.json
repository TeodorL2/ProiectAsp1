{"ast":null,"code":"import { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/authentication.service\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/button\";\nexport class RegisterComponent {\n  constructor(formBuilder, authenticationService) {\n    this.formBuilder = formBuilder;\n    this.authenticationService = authenticationService;\n    this.registerForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  register() {\n    this.authenticationService.registerUser(this.registerForm.value).subscribe(data => console.log(data));\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"register-form\", 3, \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"userName\", \"type\", \"text\", \"placeholder\", \"username\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-form-field\", 1)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_9_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵtext(10, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n    }\n  },\n  dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatInputModule, i3.MatInput, i4.MatFormField, i4.MatLabel, MatButtonModule, i5.MatButton, MatFormFieldModule],\n  styles: [\".register-form[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  height: 100vh;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWFjdGl2ZS1mb3Jtcy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGFBQWE7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5yZWdpc3Rlci1mb3JtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAA8CA,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAErG,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,kBAAkB,QAAQ,8BAA8B;;;;;;;AAcjE,OAAM,MAAOC,iBAAiB;EAM5BC,YAA6BC,WAAwB,EAClCC,qBAA4C;IADlC,gBAAW,GAAXD,WAAW;IACrB,0BAAqB,GAArBC,qBAAqB;IANxC,iBAAY,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KACnC,CAAC;EAIF;EAEAE,QAAQ;IACN,IAAI,CAACL,qBAAqB,CAACM,YAAY,CAAC,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC,CAC7DC,SAAS,CAAEC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;EAChD;;AAbWb,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCJ9BC,+BAAuD;MAExCA,wBAAQ;MAAAA,iBAAY;MAC/BA,2BAA8E;MAChFA,iBAAiB;MAEjBA,yCAAkC;MACrBA,wBAAQ;MAAAA,iBAAY;MAC/BA,2BAAkF;MACpFA,iBAAiB;MAEjBA,iCAA+D;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAS;;;MAXtDA,4CAA0B;;;iBDFlD5B,mBAAmB,qIACnBE,cAAc,6CACdC,eAAe,gBACfC,kBAAkB;EAAA0B;AAAA","names":["ReactiveFormsModule","Validators","MatInputModule","MatButtonModule","MatFormFieldModule","RegisterComponent","constructor","formBuilder","authenticationService","group","userName","required","password","register","registerUser","registerForm","value","subscribe","data","console","log","selectors","standalone","features","decls","vars","consts","template","i0","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\components\\reactive-forms\\register\\register.component.ts","C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\components\\reactive-forms\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { AuthenticationService } from '../../../core/services/authentication.service';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n  ],\n})\nexport class RegisterComponent {\n  registerForm = this.formBuilder.group({\n    userName: ['', Validators.required],\n    password: ['', Validators.required],\n  });\n\n  constructor(private readonly formBuilder: FormBuilder,\n    private readonly authenticationService: AuthenticationService) {\n  }\n\n  register() {\n    this.authenticationService.registerUser(this.registerForm.value)\n      .subscribe((data: any) => console.log(data));\n  }\n}\n","<!--\n<div>\n  <p>Register</p>\n  <form [formGroup]=\"registerForm\">\n    <input formControlName=\"userName\" placeholder=\"Username\" type=\"text\">\n    <input formControlName=\"email\" placeholder=\"Email\" type=\"text\">\n    <input formControlName=\"password\" placeholder=\"Password\" type=\"password\">\n  </form>\n  <div>\n    <button (click)=\"register()\">Register</button>\n  </div>\n</div>\n-->\n\n\n<form class=\"register-form\" [formGroup]=\"registerForm\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Username</mat-label>\n    <input matInput formControlName=\"userName\" type=\"text\" placeholder=\"username\">\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Password</mat-label>\n    <input matInput formControlName=\"password\" type=\"password\" placeholder=\"password\">\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" (click)=\"register()\">Register</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}