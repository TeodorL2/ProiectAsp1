{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, authenticationService) {\n    this.formBuilder = formBuilder;\n    this.authenticationService = authenticationService;\n    this.registerForm = this.formBuilder.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.accountAlreadyUsed = 'sirul initial';\n    this.infoBox = false;\n  }\n  register() {\n    this.authenticationService.registerUser(this.registerForm.value).subscribe(data => console.log(data), err => {\n      if (err instanceof HttpErrorResponse) if (err.status === 400) {\n        var msg = err.error.message;\n        this.accountAlreadyUsed = \"account already exists\";\n        this.infoBox = true;\n        console.log(\"mesaj: \" + msg);\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  standalone: true,\n  imports: [ReactiveFormsModule, MatInputModule, MatButtonModule, MatFormFieldModule, CommonModule, HttpErrorResponse]\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAA8CC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAErG,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,YAAY,QAAQ,iBAAiB;AAgBvC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAS5BC,YAA6BC,WAAwB,EAClCC,qBAA4C;IADlC,gBAAW,GAAXD,WAAW;IACrB,0BAAqB,GAArBC,qBAAqB;IATxC,iBAAY,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;KACnC,CAAC;IAEF,uBAAkB,GAAW,eAAe;IAC5C,YAAO,GAAG,KAAK;EAIf;EAEAE,QAAQ;IACN,IAAI,CAACL,qBAAqB,CAACM,YAAY,CAAC,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC,CAC7DC,SAAS,CAAEC,IAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,EACxCG,GAAQ,IAAI;MACX,IAAIA,GAAG,YAAYlB,iBAAiB,EAClC,IAAIkB,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtB,IAAIC,GAAG,GAAGF,GAAG,CAACG,KAAK,CAACC,OAAO;QAC7B,IAAI,CAACC,kBAAkB,GAAG,wBAAwB;QAClD,IAAI,CAACC,OAAO,GAAG,IAAI;QACnBR,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGG,GAAG,CAAC;;IAEhC,CAAC,CAAC;EACR;CACD;AA1BYlB,iBAAiB,eAd7BR,SAAS,CAAC;EACT+B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B,CAAC;EACvCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPlC,mBAAmB,EACnBE,cAAc,EACdC,eAAe,EACfC,kBAAkB,EAClBE,YAAY,EACZD,iBAAiB;CAEpB,CAAC,GACWE,iBAAiB,CA0B7B;SA1BYA,iBAAiB","names":["Component","ReactiveFormsModule","Validators","MatInputModule","MatButtonModule","MatFormFieldModule","HttpErrorResponse","CommonModule","RegisterComponent","constructor","formBuilder","authenticationService","group","userName","required","password","register","registerUser","registerForm","value","subscribe","data","console","log","err","status","msg","error","message","accountAlreadyUsed","infoBox","selector","templateUrl","styleUrls","standalone","imports"],"sourceRoot":"","sources":["C:\\Users\\Opportunity\\Desktop\\Teodor - anul II\\Opțional de dezvoltarea aplicațiilor web (ASP.NET)\\ProiectRefacut\\Drive\\ClientApp\\src\\app\\components\\reactive-forms\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { AuthenticationService } from '../../../core/services/authentication.service';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    CommonModule,\n    HttpErrorResponse\n  ],\n})\nexport class RegisterComponent {\n  registerForm = this.formBuilder.group({\n    userName: ['', Validators.required],\n    password: ['', Validators.required],\n  });\n\n  accountAlreadyUsed: string = 'sirul initial';\n  infoBox = false;\n\n  constructor(private readonly formBuilder: FormBuilder,\n    private readonly authenticationService: AuthenticationService) {\n  }\n\n  register() {\n    this.authenticationService.registerUser(this.registerForm.value)\n      .subscribe((data: any) => console.log(data),\n        (err: any) => {\n          if (err instanceof HttpErrorResponse)\n            if (err.status === 400) {\n              var msg = err.error.message;\r\n            this.accountAlreadyUsed = \"account already exists\";\r\n            this.infoBox = true;\r\n            console.log(\"mesaj: \" + msg);\r\n            }\r\n        });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}